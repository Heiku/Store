<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heiku.snacks.dao.UserDao">

    <insert id="insertUser" useGeneratedKeys="true" keyColumn="user_id" keyProperty="userId"
            parameterType="com.heiku.snacks.entity.User">
        insert into
          tb_user
        (
            name,email,gender,profile_img,
            enable_status,user_type,create_time,last_edit_time
        )values (
            #{name},#{email},#{gender},#{profileImg},#{enableStatus},
            #{userType},#{createTime},#{lastEditTime}
        )
    </insert>

    <update id="updateUser" parameterType="com.heiku.snacks.entity.User">
        update
          tb_user
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="email != null">email = #{email},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="profileImg != null">profile_img = #{profileImg},</if>
            <if test="userType != null">user_type = #{userType},</if>
            <if test="enableStatus != null">enable_status = #{enableStatus},</if>
            <if test="lastEditTime != null">last_edit_time = #{lastEditTime}</if>
        </set>
        where
          user_id = #{userId}
    </update>


    <delete id="deleteUser" parameterType="long">
        delete from
          tb_user
        where
          user_id = #{userId}
    </delete>


    <select id="queryUserById" parameterType="long" resultType="com.heiku.snacks.entity.User">
        select
          user_id,
          name,
          email,
          gender,
          profile_img,
          user_type,
          create_time,
          last_edit_time,
          enable_status
        from
          tb_user
        where
          user_id = #{userId}
    </select>

    <select id="queryUserList" resultType="com.heiku.snacks.entity.User">
        select
          user_id,
          name,
          email,
          gender,
          profile_img,
          user_type,
          create_time,
          last_edit_time,
          enable_status
        from
          tb_user
        <where>
            <if test="userCondition.name != null">
                and name like '%${userCondition.name}%'
            </if>
            <if test="userCondition.enableStatus != null">
                and enable_status = #{userCondition.enableStatus}
            </if>
        </where>
        order by
          create_time
        desc
          limit #{rowIndex},#{pageSize};
    </select>


    <select id="queryUserCount" resultType="int">
        select
          count(1)
        from
          tb_user
        <where>
            <if test="userCondition.name != null">
                and name like '%${userCondition.name}%'
            </if>
            <if test="userCondition.enableStatus != null">
                and enable_status = #{userCondition.enableStatus}
            </if>
        </where>
    </select>
</mapper>