<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heiku.snacks.dao.ShopDao">
    
    <resultMap id="shopMap" type="com.heiku.snacks.entity.Shop">
        <id column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <result column="shop_desc" property="shopDesc"/>
        <result column="shop_address" property="shopAddress"/>
        <result column="phone" property="phone"/>
        <result column="shop_img" property="shopImg"/>
        <result column="priority" property="priority"/>
        <result column="create_time" property="createTime"/>
        <result column="last_edit_time" property="lastEditTime"/>
        <result column="enable_status" property="enableStatus"/>
        <result column="advice" property="advice"/>

        <!-- area -->
        <association column="area_id" property="area" javaType="com.heiku.snacks.entity.Area">
            <id column="area_id" property="areaId"/>
            <result column="area_name" property="areaName"/>
        </association>

        <!-- ShopCategory -->
        <association column="shop_category_id" property="shopCategory" javaType="com.heiku.snacks.entity.ShopCategory">
            <id column="shop_category_id" property="shopCategoryId"/>
            <result column="shop_category_name" property="shopCategoryName"/>
        </association>

        <!-- manager -->
        <association column="manager_id" property="manager" javaType="com.heiku.snacks.entity.User">
            <id column="user_id" property="userId"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>
    
    <insert id="insertShop" useGeneratedKeys="true" keyColumn="shop_id" keyProperty="shopId">
        insert into
          tb_shop(manager_id, area_id, shop_category_id, shop_name, shop_desc, shop_address,phone, shop_img, priority,
           create_time, last_edit_time, enable_status, advice)
        values
          (#{manager.userId}, #{area.areaId}, #{shopCategory.shopCategoryId}, #{shopName}, #{shopDesc}, #{shopAddress},
           #{phone}, #{shopImg}, #{priority}, #{createTime}, #{lastEditTime}, #{enableStatus}, #{advice})
    </insert>

    <update id="updateShop" parameterType="com.heiku.snacks.entity.Shop">
        update
          tb_shop
        <set>
          <if test="shopName != null">
              shop_name = #{shopName},
          </if>
            <if test="shopDesc != null">
                shop_desc = #{shopDesc},
            </if>
            <if test="shopAddress != null">
                shop_address = #{shopAddress},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="shopImg != null">
                shop_img = #{shopImg},
            </if>
            <if test="priority != null">
                priority = #{priority},
            </if>
            <if test="lastEditTime != null">
                last_edit_time = #{lastEditTime},
            </if>
            <if test="enableStatus != null">
                enable_status = #{enableStatus},
            </if>
            <if test="advice != null">
                advice = #{advice},
            </if>
            <if test="shopCategory != null">
                shop_category_id = #{shopCategory.shopCategoryId},
            </if>
            <if test="area != null">
                area_id = #{area.areaId}
            </if>
        </set>
        where
          shop_id = #{shopId}
    </update>
    

    <select id="queryByShopId" resultMap="shopMap" parameterType="Long">
        select
          s.shop_id,
          s.shop_name,
          s.shop_desc,
          s.shop_address,
          s.phone,
          s.shop_img,
          s.priority,
          s.create_time,
          s.last_edit_time,
          s.enable_status,
          s.advice,
          a.area_id,
          a.area_name,
          sc.shop_category_id,
          sc.shop_category_name
        from
          tb_shop s,
          tb_area a,
          tb_shop_category sc
        where
          s.area_id = a.area_Id
          and
          s.shop_category_id = sc.shop_category_id
          and
          s.shop_id = #{shopId}
    </select>

    
    <!-- 查询指定属性的商铺数量 -->
    <select id="queryShopCount" resultType="int">
        select
          count(1)
        from
          tb_shop s,
          tb_area a,
          tb_shop_category sc
        <where>
            <if test="shopCondition.shopCategory != null
                        and shopCondition.shopCategory.shopCategoryId != null">
                and s.shop_category_id = #{shopCondition.shopCategory.shopCategoryId}
            </if>
            <if test="shopCondition.shopCategory != null
                        and shopCondition.shopCategory.parent != null
                        and shopCondition.shopCategory.parent.shopCategoryId != null">
                and s.shop_category_id in
                (select
                shop_category_id
                from
                tb_shop_category
                where
                parent_Id = #{shopCondition.shopCategory.parent.shopCategoryId}
                )
            </if>
            <if test="shopCondition.area != null
                        and shopCondition.area.areaId != null">
                and a.area_id = #{shopCondition.area.areaId}
            </if>
            <if test="shopCondition.shopName != null">
                and shop_name like '%${shopCondition.shopName}%'
            </if>
            <if test="shopCondition.enableStatus != null">
                and enable_status = #{shopCondition.enableStatus}
            </if>
            <if test="shopCondition.manager != null
                        and shopCondition.manager.userId != null">
                and manager_id = #{shopCondition.manager.userId}
            </if>
            and s.area_Id = a.area_id
            and s.shop_category_id = sc.shop_category_id
        </where>
    </select>

    <!-- 指定商铺属性查询，分页特定行 -->
    <select id="queryShopList" resultMap="shopMap">
        select
          s.shop_id,
          s.shop_name,
          s.shop_desc,
          s.shop_address,
          s.phone,
          s.shop_img,
          s.priority,
          s.create_time,
          s.last_edit_time,
          s.enable_status,
          s.advice,
          a.area_id,
          a.area_name,
          sc.shop_category_id,
          sc.shop_category_name
        from
          tb_shop s,
          tb_area a,
          tb_shop_category sc
        <where>
            <if test="shopCondition.shopCategory != null
                        and shopCondition.shopCategory.shopCategoryId != null">
                and s.shop_category_id = #{shopCondition.shopCategory.shopCategoryId}
            </if>

            <if test="shopCondition.shopCategory != null
                        and shopCondition.shopCategory.parent != null
                        and shopCondition.shopCategory.parent.shopCategoryId != null">
                and s.shop_category_id in
                  (select
                      shop_category_id
                    from
                       tb_shop_category
                    where
                        parent_Id = #{shopCondition.shopCategory.parent.shopCategoryId}
                  )
            </if>


            <if test="shopCondition.area != null
                        and shopCondition.area.areaId != null">
                and a.area_id = #{shopCondition.area.areaId}
            </if>
            <if test="shopCondition.shopName != null">
                and shop_name like '%${shopCondition.shopName}%'
            </if>
            <if test="shopCondition.enableStatus != null">
                and enable_status = #{shopCondition.enableStatus}
            </if>
            <if test="shopCondition.manager != null
                        and shopCondition.manager.userId != null">
                and manager_id = #{shopCondition.manager.userId}
            </if>
            and s.area_Id = a.area_id
            and s.shop_category_id = sc.shop_category_id
        </where>
        order by
          s.priority desc
        limit #{rowIndex},#{pageSize};
    </select>
</mapper>